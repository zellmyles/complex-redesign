'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var propTypes = {
  tag: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]),
  inverse: _propTypes2.default.bool,
  color: _propTypes2.default.string,
  block: _propTypes2.default.bool,
  outline: _propTypes2.default.bool,
  className: _propTypes2.default.string,
  cssModule: _propTypes2.default.object
};

var defaultProps = {
  tag: 'div'
};

var Card = function Card(props) {
  var className = props.className,
      cssModule = props.cssModule,
      color = props.color,
      block = props.block,
      inverse = props.inverse,
      outline = props.outline,
      Tag = props.tag,
      attributes = _objectWithoutProperties(props, ['className', 'cssModule', 'color', 'block', 'inverse', 'outline', 'tag']);

  var classes = (0, _utils.mapToCssModules)((0, _classnames2.default)(className, 'card', inverse ? 'card-inverse' : false, block ? 'card-block' : false, color ? 'card' + (outline ? '-outline' : '') + '-' + color : false), cssModule);

  return _react2.default.createElement(Tag, _extends({}, attributes, { className: classes }));
};

Card.propTypes = propTypes;
Card.defaultProps = defaultProps;

exports.default = Card;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9DYXJkLmpzIl0sIm5hbWVzIjpbInByb3BUeXBlcyIsInRhZyIsIlByb3BUeXBlcyIsIm9uZU9mVHlwZSIsImZ1bmMiLCJzdHJpbmciLCJpbnZlcnNlIiwiYm9vbCIsImNvbG9yIiwiYmxvY2siLCJvdXRsaW5lIiwiY2xhc3NOYW1lIiwiY3NzTW9kdWxlIiwib2JqZWN0IiwiZGVmYXVsdFByb3BzIiwiQ2FyZCIsInByb3BzIiwiVGFnIiwiYXR0cmlidXRlcyIsImNsYXNzZXMiLCJSZWFjdCIsImNyZWF0ZUVsZW1lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBLElBQU1BLFlBQVk7QUFDaEJDLE9BQUtDLG9CQUFVQyxTQUFWLENBQW9CLENBQUNELG9CQUFVRSxJQUFYLEVBQWlCRixvQkFBVUcsTUFBM0IsQ0FBcEIsQ0FEVztBQUVoQkMsV0FBU0osb0JBQVVLLElBRkg7QUFHaEJDLFNBQU9OLG9CQUFVRyxNQUhEO0FBSWhCSSxTQUFPUCxvQkFBVUssSUFKRDtBQUtoQkcsV0FBU1Isb0JBQVVLLElBTEg7QUFNaEJJLGFBQVdULG9CQUFVRyxNQU5MO0FBT2hCTyxhQUFXVixvQkFBVVc7QUFQTCxDQUFsQjs7QUFVQSxJQUFNQyxlQUFlO0FBQ25CYixPQUFLO0FBRGMsQ0FBckI7O0FBSUEsSUFBTWMsT0FBTyxTQUFQQSxJQUFPLENBQUNDLEtBQUQsRUFBVztBQUFBLE1BRXBCTCxTQUZvQixHQVVsQkssS0FWa0IsQ0FFcEJMLFNBRm9CO0FBQUEsTUFHcEJDLFNBSG9CLEdBVWxCSSxLQVZrQixDQUdwQkosU0FIb0I7QUFBQSxNQUlwQkosS0FKb0IsR0FVbEJRLEtBVmtCLENBSXBCUixLQUpvQjtBQUFBLE1BS3BCQyxLQUxvQixHQVVsQk8sS0FWa0IsQ0FLcEJQLEtBTG9CO0FBQUEsTUFNcEJILE9BTm9CLEdBVWxCVSxLQVZrQixDQU1wQlYsT0FOb0I7QUFBQSxNQU9wQkksT0FQb0IsR0FVbEJNLEtBVmtCLENBT3BCTixPQVBvQjtBQUFBLE1BUWZPLEdBUmUsR0FVbEJELEtBVmtCLENBUXBCZixHQVJvQjtBQUFBLE1BU2pCaUIsVUFUaUIsNEJBVWxCRixLQVZrQjs7QUFXdEIsTUFBTUcsVUFBVSw0QkFBZ0IsMEJBQzlCUixTQUQ4QixFQUU5QixNQUY4QixFQUc5QkwsVUFBVSxjQUFWLEdBQTJCLEtBSEcsRUFJOUJHLFFBQVEsWUFBUixHQUF1QixLQUpPLEVBSzlCRCxrQkFBZUUsVUFBVSxVQUFWLEdBQXVCLEVBQXRDLFVBQTRDRixLQUE1QyxHQUFzRCxLQUx4QixDQUFoQixFQU1iSSxTQU5hLENBQWhCOztBQVFBLFNBQ0VRLGdCQUFNQyxhQUFOLENBQW9CSixHQUFwQixlQUE4QkMsVUFBOUIsSUFBMENQLFdBQVdRLE9BQXJELElBREY7QUFHRCxDQXRCRDs7QUF3QkFKLEtBQUtmLFNBQUwsR0FBaUJBLFNBQWpCO0FBQ0FlLEtBQUtELFlBQUwsR0FBb0JBLFlBQXBCOztrQkFFZUMsSSIsImZpbGUiOiJDYXJkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IHsgbWFwVG9Dc3NNb2R1bGVzIH0gZnJvbSAnLi91dGlscyc7XG5cbmNvbnN0IHByb3BUeXBlcyA9IHtcbiAgdGFnOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLnN0cmluZ10pLFxuICBpbnZlcnNlOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGJsb2NrOiBQcm9wVHlwZXMuYm9vbCxcbiAgb3V0bGluZTogUHJvcFR5cGVzLmJvb2wsXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzTW9kdWxlOiBQcm9wVHlwZXMub2JqZWN0LFxufTtcblxuY29uc3QgZGVmYXVsdFByb3BzID0ge1xuICB0YWc6ICdkaXYnXG59O1xuXG5jb25zdCBDYXJkID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHtcbiAgICBjbGFzc05hbWUsXG4gICAgY3NzTW9kdWxlLFxuICAgIGNvbG9yLFxuICAgIGJsb2NrLFxuICAgIGludmVyc2UsXG4gICAgb3V0bGluZSxcbiAgICB0YWc6IFRhZyxcbiAgICAuLi5hdHRyaWJ1dGVzXG4gIH0gPSBwcm9wcztcbiAgY29uc3QgY2xhc3NlcyA9IG1hcFRvQ3NzTW9kdWxlcyhjbGFzc05hbWVzKFxuICAgIGNsYXNzTmFtZSxcbiAgICAnY2FyZCcsXG4gICAgaW52ZXJzZSA/ICdjYXJkLWludmVyc2UnIDogZmFsc2UsXG4gICAgYmxvY2sgPyAnY2FyZC1ibG9jaycgOiBmYWxzZSxcbiAgICBjb2xvciA/IGBjYXJkJHtvdXRsaW5lID8gJy1vdXRsaW5lJyA6ICcnfS0ke2NvbG9yfWAgOiBmYWxzZVxuICApLCBjc3NNb2R1bGUpO1xuXG4gIHJldHVybiAoXG4gICAgUmVhY3QuY3JlYXRlRWxlbWVudChUYWcsIHsgLi4uYXR0cmlidXRlcywgY2xhc3NOYW1lOiBjbGFzc2VzIH0pXG4gICk7XG59O1xuXG5DYXJkLnByb3BUeXBlcyA9IHByb3BUeXBlcztcbkNhcmQuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuXG5leHBvcnQgZGVmYXVsdCBDYXJkO1xuIl19