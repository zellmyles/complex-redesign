'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var propTypes = {
  tag: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]),
  className: _propTypes2.default.string,
  cssModule: _propTypes2.default.object
};

var defaultProps = {
  tag: 'div'
};

var CardImgOverlay = function CardImgOverlay(props) {
  var className = props.className,
      cssModule = props.cssModule,
      Tag = props.tag,
      attributes = _objectWithoutProperties(props, ['className', 'cssModule', 'tag']);

  var classes = (0, _utils.mapToCssModules)((0, _classnames2.default)(className, 'card-img-overlay'), cssModule);

  return _react2.default.createElement(Tag, _extends({}, attributes, { className: classes }));
};

CardImgOverlay.propTypes = propTypes;
CardImgOverlay.defaultProps = defaultProps;

exports.default = CardImgOverlay;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9DYXJkSW1nT3ZlcmxheS5qcyJdLCJuYW1lcyI6WyJwcm9wVHlwZXMiLCJ0YWciLCJQcm9wVHlwZXMiLCJvbmVPZlR5cGUiLCJmdW5jIiwic3RyaW5nIiwiY2xhc3NOYW1lIiwiY3NzTW9kdWxlIiwib2JqZWN0IiwiZGVmYXVsdFByb3BzIiwiQ2FyZEltZ092ZXJsYXkiLCJwcm9wcyIsIlRhZyIsImF0dHJpYnV0ZXMiLCJjbGFzc2VzIiwiUmVhY3QiLCJjcmVhdGVFbGVtZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7QUFFQSxJQUFNQSxZQUFZO0FBQ2hCQyxPQUFLQyxvQkFBVUMsU0FBVixDQUFvQixDQUFDRCxvQkFBVUUsSUFBWCxFQUFpQkYsb0JBQVVHLE1BQTNCLENBQXBCLENBRFc7QUFFaEJDLGFBQVdKLG9CQUFVRyxNQUZMO0FBR2hCRSxhQUFXTCxvQkFBVU07QUFITCxDQUFsQjs7QUFNQSxJQUFNQyxlQUFlO0FBQ25CUixPQUFLO0FBRGMsQ0FBckI7O0FBSUEsSUFBTVMsaUJBQWlCLFNBQWpCQSxjQUFpQixDQUFDQyxLQUFELEVBQVc7QUFBQSxNQUU5QkwsU0FGOEIsR0FNNUJLLEtBTjRCLENBRTlCTCxTQUY4QjtBQUFBLE1BRzlCQyxTQUg4QixHQU01QkksS0FONEIsQ0FHOUJKLFNBSDhCO0FBQUEsTUFJekJLLEdBSnlCLEdBTTVCRCxLQU40QixDQUk5QlYsR0FKOEI7QUFBQSxNQUszQlksVUFMMkIsNEJBTTVCRixLQU40Qjs7QUFPaEMsTUFBTUcsVUFBVSw0QkFBZ0IsMEJBQzlCUixTQUQ4QixFQUU5QixrQkFGOEIsQ0FBaEIsRUFHYkMsU0FIYSxDQUFoQjs7QUFLQSxTQUNFUSxnQkFBTUMsYUFBTixDQUFvQkosR0FBcEIsZUFBOEJDLFVBQTlCLElBQTBDUCxXQUFXUSxPQUFyRCxJQURGO0FBR0QsQ0FmRDs7QUFpQkFKLGVBQWVWLFNBQWYsR0FBMkJBLFNBQTNCO0FBQ0FVLGVBQWVELFlBQWYsR0FBOEJBLFlBQTlCOztrQkFFZUMsYyIsImZpbGUiOiJDYXJkSW1nT3ZlcmxheS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCB7IG1hcFRvQ3NzTW9kdWxlcyB9IGZyb20gJy4vdXRpbHMnO1xuXG5jb25zdCBwcm9wVHlwZXMgPSB7XG4gIHRhZzogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zdHJpbmddKSxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3NNb2R1bGU6IFByb3BUeXBlcy5vYmplY3QsXG59O1xuXG5jb25zdCBkZWZhdWx0UHJvcHMgPSB7XG4gIHRhZzogJ2Rpdidcbn07XG5cbmNvbnN0IENhcmRJbWdPdmVybGF5ID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHtcbiAgICBjbGFzc05hbWUsXG4gICAgY3NzTW9kdWxlLFxuICAgIHRhZzogVGFnLFxuICAgIC4uLmF0dHJpYnV0ZXNcbiAgfSA9IHByb3BzO1xuICBjb25zdCBjbGFzc2VzID0gbWFwVG9Dc3NNb2R1bGVzKGNsYXNzTmFtZXMoXG4gICAgY2xhc3NOYW1lLFxuICAgICdjYXJkLWltZy1vdmVybGF5J1xuICApLCBjc3NNb2R1bGUpO1xuXG4gIHJldHVybiAoXG4gICAgUmVhY3QuY3JlYXRlRWxlbWVudChUYWcsIHsgLi4uYXR0cmlidXRlcywgY2xhc3NOYW1lOiBjbGFzc2VzIH0pXG4gICk7XG59O1xuXG5DYXJkSW1nT3ZlcmxheS5wcm9wVHlwZXMgPSBwcm9wVHlwZXM7XG5DYXJkSW1nT3ZlcmxheS5kZWZhdWx0UHJvcHMgPSBkZWZhdWx0UHJvcHM7XG5cbmV4cG9ydCBkZWZhdWx0IENhcmRJbWdPdmVybGF5O1xuIl19